prog	: block
block	: stmt ';' block
		| stmt
stmt    : assn
		| 'rd' id
		| 'wr' expr
		| 'if' boolexpr 'then' stmt
		| 'if' boolexpr 'then' stmt 'else' stmt
		| 'while' boolexpr 'do' stmt
		| 'begin' block 'end'
assn    :  id  '='  expr 
expr    : term  addop  expr
        | term 
term    : unary fact  mulop  term
        | unary fact
fact    : id 
        | num 
        | '('  expr  ')'
boolexpr: expr relop expr
addop   : '+'
        | '-'
mulop   : '*'
        | '/'
relop	: '<'
		| '<='
		| '>'
		| '>='
		| '<>'
		| '=='
id      : id
unary   : '-' unary
	    | '-'

